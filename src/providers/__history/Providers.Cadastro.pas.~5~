unit Providers.Cadastro;

interface

uses
  System.SysUtils, System.Classes, Providers.Connection, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.PG, FireDAC.Phys.PGDef, FireDAC.ConsoleUI.Wait, Data.DB,
  FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet,
  System.JSON, System.Generics.Collections;

type
  TProvidersCadastro = class(TProvidersConnection)
    qrySearch: TFDQuery;
    qryRecordCount: TFDQuery;
    qryCRUD: TFDQuery;
  private
    { Private declarations }
  public
    { Public declarations }
    function Insert(const AJson: TJSONObject): Boolean; virtual;
    function Update(const AJson: TJSONObject): Boolean; virtual;
    function Delete: Boolean; virtual;
    function Select(const AParams: TDictionary<string, string>): TFDQuery; overload; virtual;
    function Select(const AId: string): TFDQuery; overload; virtual;
    function Select: Int64; overload; virtual;
  end;

//var
//  ProvidersCadastro: TProvidersCadastro;

implementation

{%CLASSGROUP 'System.Classes.TPersistent'}

{$R *.dfm}

{ TProvidersCadastro }

function TProvidersCadastro.Delete: Boolean;
begin

end;

function TProvidersCadastro.Insert(const AJson: TJSONObject): Boolean;
begin
  qryCRUD.SQL.Add('where 1 <> 1');
  qryCRUD.Open();
//  qryCRUD.LoadFromJSON
end;

function TProvidersCadastro.Select: Int64;
begin

end;

function TProvidersCadastro.Select(const AId: string): TFDQuery;
begin

end;

function TProvidersCadastro.Select(
  const AParams: TDictionary<string, string>): TFDQuery;
begin

end;

function TProvidersCadastro.Update(const AJson: TJSONObject): Boolean;
begin

end;

end.
